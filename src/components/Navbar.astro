---
import { ASSETS_URL } from "../../static/utils/constants";
import { dropdownData } from "../../static/utils/NavbarDropdown";

export interface Props {
  activeNav?: string;
}

const { activeNav = "home" } = Astro.props as Props;

function setActive(currentNav: string): string {
  if (currentNav === activeNav) {
    return "nav-active";
  }
  return "";
}
---

<nav class="navigation-menu full-container">
  <div class="container navbar-container">
    <!-- Logo -->
    <a href="/crete" class="logo">
      <img src={`${ASSETS_URL}/images/logo/igemcretelogo.svg`} />
      <div class="title-logo">
        iGEM<span style="color: var(--coral-red-color)">CRETE</span>
      </div>
    </a>

    <!-- Navigation -->
    <div class="navbar-mobile" id="navItems">
      <div class="nav-elements">
        <div class="underline-animation">
          <a href="/crete" class={`nav-button ${setActive("home")}`}>Home</a>
        </div>

        {
          dropdownData.map((button) => (
            <div class="underline-animation">
              <button
                class={`dropdown-button ${setActive(button.id)}`}
                id={button.id}
              >
                {button.name}
                <span class="rotate-arrow">
                  <svg
                    class="chevron-down dropdown-button"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </span>
              </button>
              <div class="dropdown-content" id={button.id + "-content"}>
                {button.content.map((dropdown) => (
                  <a href={`/crete/${dropdown.id}`}>{dropdown.name}</a>
                ))}
              </div>
            </div>
          ))
        }
        <!-- Adding Judging form manually -->
        <div class="underline-animation">
          <button class={`dropdown-button ${setActive("awards")}`} id="awards">
            Awards
            <span class="rotate-arrow">
              <svg
                class="chevron-down dropdown-button"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M19 9l-7 7-7-7"></path>
              </svg>
            </span>
          </button>
          <div class="dropdown-content" id={"awards-content"}>
            <a href="/crete/medals">Medals</a>
            <a
              href="https://old.igem.org/2022_Judging_Form?id=4495"
              target="_blank">Judging Form</a
            >
          </div>
        </div>
      </div>
    </div>

    <!-- Hamburger button for Mobile/Tablet -->
    <button class="menu-toggle-button">
      <div class="hamburger"></div>
    </button>
  </div>
</nav>

<style>
  .navigation-menu {
    position: fixed;
    z-index: 1;
    background-color: white;
    padding: 5px 0px 5px 0px;
    font-family: var(--main-font-medium);
    box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.1);
  }

  .navigation-menu a:not(.nav-active),
  .navigation-menu .dropdown-button:not(.nav-active) {
    color: black;
  }

  .nav-active {
    font-family: var(--main-font-bold);
    color: var(--coral-red-color);
  }

  .navbar-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    display: flex;
    flex-direction: row;
    gap: 0.75em;
    align-items: center;
  }

  .title-logo {
    font-family: var(--main-font-bold);
    font-size: 1.5rem;
    color: var(--dark-blue-color);
  }

  .nav-elements {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    column-gap: 1.75em;
  }

  .dropdown-button:not(.nav-active) {
    font-family: var(--main-font-medium);
  }

  /* NavBar Menu Dropdowns */

  .nav-button {
    display: block;
    overflow-x: clip;
    overflow-y: visible;
    font-size: 1.125rem;
  }

  .dropdown-button {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: flex-start;
    border: none;
    background-color: inherit;
    align-items: center;
    column-gap: 4px;
    padding: 0;
    overflow-x: clip;
    overflow-y: visible;
    cursor: pointer;
    font-size: 1.125rem;
    white-space: nowrap;
  }

  /* Nav Arrow Dropdown */

  .chevron-down {
    width: 1em;
    height: 1em;
    padding: 0;
    stroke: black;
    stroke-width: 2px;
    fill: none;
  }

  .rotate-arrow {
    transition: all 0.2s ease-in;
    -webkit-transition: all 0.2s ease-in;
    -moz-transition: all 0.2s ease-in;
    -o-transition: all 0.2s ease-in;
    -ms-transition: all 0.2s ease-in;
  }

  .rotate-arrow.--arrow-down {
    -moz-transform: scale(1, -1);
    -webkit-transform: scale(1, -1);
    -o-transform: scale(1, -1);
    -ms-transform: scale(1, -1);
    transform: scale(1, -1);
  }

  .dropdown-content {
    display: flex;
    flex-direction: column;
    row-gap: 0.5em;
    position: absolute;
    top: 50px;
    left: 50%;
    transform: translateX(-50%) translateY(-1em);
    transition: transform 0.5s;
    border-radius: 0.3em;
    background-color: white;
    box-shadow: 0px 0px 18px 5px rgba(0, 0, 0, 0.1);
    padding: 0.75em;
    visibility: hidden;
    font-family: var(--main-font-medium);
    font-size: 1.25rem;
    z-index: 1;
    white-space: nowrap;
  }

  .dropdown-content::before {
    content: "";
    position: absolute;
    top: -0.5em;
    left: 50%;
    transform: translateX(-50%);
    border-left: 0.5em solid transparent;
    border-right: 0.5em solid transparent;
    border-bottom: 0.5em solid white;
  }

  .dropdown-content a:hover {
    color: var(--coral-red-color);
  }

  .dropdown--show {
    visibility: visible;
    transform: translateX(-50%) translateY(0);
  }

  /* NavBar Hover Animation */

  .underline-animation {
    position: relative;
    -webkit-transition: color 0.2s ease;
    -o-transition: color 0.2s ease;
    transition: color 0.2s ease;
  }

  .underline-animation:hover::after,
  .underline-animation:hover::before {
    width: 100%;
    left: 0;
  }

  .underline-animation::after,
  .underline-animation::before {
    content: "";
    position: absolute;
    top: calc(100% + 5px);
    width: 0;
    right: 0;
    height: 3px;
    border-radius: 100px;
  }

  .underline-animation::before {
    -webkit-transition: width 0.25s cubic-bezier(0.51, 0.18, 0, 0.88) 0.1s;
    -o-transition: width 0.25s cubic-bezier(0.51, 0.18, 0, 0.88) 0.1s;
    transition: width 0.25s cubic-bezier(0.51, 0.18, 0, 0.88) 0.1s;
    background: var(--turquoise-color);
  }

  .underline-animation::after {
    -webkit-transition: width 0.2s cubic-bezier(0.29, 0.18, 0.26, 0.83);
    -o-transition: width 0.2s cubic-bezier(0.29, 0.18, 0.26, 0.83);
    transition: width 0.2s cubic-bezier(0.29, 0.18, 0.26, 0.83);
    background: var(--coral-red-color);
  }

  /* Hamburger Mobile Navigation */

  .menu-toggle-button {
    background-color: transparent;
    border: none;
    outline: none;
    cursor: pointer;
  }

  .hamburger,
  .hamburger::before,
  .hamburger::after {
    content: "";
    display: block;
    background: var(--dark-blue-color);
    height: 3px;
    width: 1.75rem;
    border-radius: 5px;
    transition: all ease-in-out 500ms;
  }

  .hamburger::before {
    transform: translateY(-7px);
  }

  .hamburger::after {
    transform: translateY(4px);
  }

  .open .hamburger {
    transform: rotate(45deg);
    background-color: transparent;
  }

  .open .hamburger::before {
    transform: translateY(0);
  }

  .open .hamburger::after {
    transform: translateY(-3px) rotate(-90deg);
  }

  /* Media Queries */

  @media (min-width: 992px) {
    .menu-toggle-button {
      display: none;
    }
  }

  @media (max-width: 992px) {
    .navbar-mobile {
      min-width: 50%;
      position: absolute;
      top: 100%;
      right: 0;
      transform: translateX(100%);
      transition: transform 0.5s ease-in-out;
      background-color: white;
      border-bottom-left-radius: 0.3em;
      box-shadow: 0px 0px 18px 5px rgba(0, 0, 0, 0.1);
    }

    .nav-button,
    .dropdown-button {
      font-size: 1.75rem;
    }

    .nav-elements {
      height: 100%;
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;
      padding: 2em;
      gap: 2em;
    }

    .dropdown-content {
      top: 0;
      background-color: inherit;
      font-size: 1.75rem;
      padding: 1em 0em 0 1em;
    }

    .dropdown-content::before {
      display: none;
    }
    .open-nav {
      transform: translateX(0);
    }

    .dropdown-content--mobile {
      position: relative;
      box-shadow: none;
    }

    .underline-animation::after,
    .underline-animation::before {
      visibility: hidden;
    }
  }
  @media (max-width: 576px) {
    .navbar-mobile {
      width: 100%;
    }
    .nav-elements {
      padding: 2em;
      gap: 1em;
    }

    .nav-button,
    .dropdown-button {
      font-size: 1.5rem;
    }

    .dropdown-content {
      font-size: 1.25rem;
      padding: 0.5em 0em 0 1em;
    }
  }
</style>

<script>
  const arrowList = document.querySelectorAll("span.rotate-arrow");
  const dropdownLists = document.querySelectorAll(".dropdown-content");

  const project = document.querySelector("#project");
  const labs = document.querySelector("#labs");
  const hp = document.querySelector("#hp");
  const team = document.querySelector("#team");
  const awards = document.querySelector("#awards");

  project.addEventListener("click", function () {
    let projectContent = document.querySelector("#project-content");

    resetArrows(0);
    closeMenuDropdownsExceptSelf(projectContent);

    projectContent.classList.toggle("dropdown--show");
    arrowList[0].classList.toggle("--arrow-down");
    projectContent.classList.toggle("dropdown-content--mobile");
  });

  labs.addEventListener("click", function () {
    let labsContent = document.querySelector("#labs-content");

    resetArrows(1);
    closeMenuDropdownsExceptSelf(labsContent);

    labsContent.classList.toggle("dropdown--show");
    arrowList[1].classList.toggle("--arrow-down");
    labsContent.classList.toggle("dropdown-content--mobile");
  });

  hp.addEventListener("click", function () {
    let hpContent = document.querySelector("#hp-content");

    resetArrows(2);
    closeMenuDropdownsExceptSelf(hpContent);

    hpContent.classList.toggle("dropdown--show");
    arrowList[2].classList.toggle("--arrow-down");
    hpContent.classList.toggle("dropdown-content--mobile");
  });

  team.addEventListener("click", function () {
    let teamContent = document.querySelector("#team-content");

    resetArrows(3);
    closeMenuDropdownsExceptSelf(teamContent);

    teamContent.classList.toggle("dropdown--show");
    arrowList[3].classList.toggle("--arrow-down");
    teamContent.classList.toggle("dropdown-content--mobile");
  });

  awards.addEventListener("click", function () {
    let awardsContent = document.querySelector("#awards-content");

    resetArrows(4);
    closeMenuDropdownsExceptSelf(awardsContent);

    awardsContent.classList.toggle("dropdown--show");
    arrowList[4].classList.toggle("--arrow-down");
    awardsContent.classList.toggle("dropdown-content--mobile");
  });

  function closeMenuDropdowns() {
    dropdownLists.forEach((list) => {
      if (list.classList.contains("dropdown--show")) {
        list.classList.remove("dropdown--show");
      }
      if (list.classList.contains("dropdown-content--mobile")) {
        list.classList.remove("dropdown-content--mobile");
      }
    });
  }

  function closeMenuDropdownsExceptSelf(self: Element) {
    dropdownLists.forEach((element) => {
      if (element != self) {
        element.classList.remove("dropdown--show");
        element.classList.remove("dropdown-content--mobile");
      }
    });
  }

  window.onclick = function (event) {
    if (!event.target.matches(".navigation-menu .dropdown-button")) {
      resetArrows(-1);
      closeMenuDropdowns();
    }
  };

  function resetArrows(except: Number) {
    for (let i = 0; i < arrowList.length; i++) {
      if (arrowList[i].classList.contains("--arrow-down") && i !== except) {
        arrowList[i].classList.remove("--arrow-down");
      }
    }
  }

  /* Hamburger Button */

  const menuHamBtn = document.querySelector(".menu-toggle-button");
  const navbarItems = document.querySelector("#navItems");

  menuHamBtn.addEventListener("click", function () {
    menuHamBtn.classList.toggle("open");
    navbarItems.classList.toggle("open-nav");
  });
</script>
